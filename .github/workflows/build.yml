name: Build and Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.23.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        go build -o kubenest.exe ./cmd/kubenest
        mkdir -p release
        mv kubenest.exe release/

    - name: Build for Unix
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        go build -o kubenest ./cmd/kubenest
        mkdir -p release
        mv kubenest release/

    - name: Upload to GitHub Packages
      uses: actions/upload-artifact@v4
      with:
        name: kubenest-${{ matrix.os }}
        path: release/
        if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/kubenest-ubuntu-latest/kubenest
            artifacts/kubenest-windows-latest/kubenest.exe
            artifacts/kubenest-macos-latest/kubenest
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 